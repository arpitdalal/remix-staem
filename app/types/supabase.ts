/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/history": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.history.id"];
          secret?: parameters["rowFilter.history.secret"];
          created_at?: parameters["rowFilter.history.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["history"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** history */
          history?: definitions["history"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.history.id"];
          secret?: parameters["rowFilter.history.secret"];
          created_at?: parameters["rowFilter.history.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.history.id"];
          secret?: parameters["rowFilter.history.secret"];
          created_at?: parameters["rowFilter.history.created_at"];
        };
        body: {
          /** history */
          history?: definitions["history"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/imdb": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imdb.id"];
          image?: parameters["rowFilter.imdb.image"];
          link?: parameters["rowFilter.imdb.link"];
          title?: parameters["rowFilter.imdb.title"];
          year?: parameters["rowFilter.imdb.year"];
          certificate?: parameters["rowFilter.imdb.certificate"];
          duration?: parameters["rowFilter.imdb.duration"];
          genre?: parameters["rowFilter.imdb.genre"];
          rating?: parameters["rowFilter.imdb.rating"];
          metascore?: parameters["rowFilter.imdb.metascore"];
          description?: parameters["rowFilter.imdb.description"];
          vote?: parameters["rowFilter.imdb.vote"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["imdb"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** imdb */
          imdb?: definitions["imdb"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imdb.id"];
          image?: parameters["rowFilter.imdb.image"];
          link?: parameters["rowFilter.imdb.link"];
          title?: parameters["rowFilter.imdb.title"];
          year?: parameters["rowFilter.imdb.year"];
          certificate?: parameters["rowFilter.imdb.certificate"];
          duration?: parameters["rowFilter.imdb.duration"];
          genre?: parameters["rowFilter.imdb.genre"];
          rating?: parameters["rowFilter.imdb.rating"];
          metascore?: parameters["rowFilter.imdb.metascore"];
          description?: parameters["rowFilter.imdb.description"];
          vote?: parameters["rowFilter.imdb.vote"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imdb.id"];
          image?: parameters["rowFilter.imdb.image"];
          link?: parameters["rowFilter.imdb.link"];
          title?: parameters["rowFilter.imdb.title"];
          year?: parameters["rowFilter.imdb.year"];
          certificate?: parameters["rowFilter.imdb.certificate"];
          duration?: parameters["rowFilter.imdb.duration"];
          genre?: parameters["rowFilter.imdb.genre"];
          rating?: parameters["rowFilter.imdb.rating"];
          metascore?: parameters["rowFilter.imdb.metascore"];
          description?: parameters["rowFilter.imdb.description"];
          vote?: parameters["rowFilter.imdb.vote"];
        };
        body: {
          /** imdb */
          imdb?: definitions["imdb"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/secrets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.secrets.id"];
          user_id?: parameters["rowFilter.secrets.user_id"];
          secret?: parameters["rowFilter.secrets.secret"];
          created_at?: parameters["rowFilter.secrets.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["secrets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** secrets */
          secrets?: definitions["secrets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.secrets.id"];
          user_id?: parameters["rowFilter.secrets.user_id"];
          secret?: parameters["rowFilter.secrets.secret"];
          created_at?: parameters["rowFilter.secrets.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.secrets.id"];
          user_id?: parameters["rowFilter.secrets.user_id"];
          secret?: parameters["rowFilter.secrets.secret"];
          created_at?: parameters["rowFilter.secrets.created_at"];
        };
        body: {
          /** secrets */
          secrets?: definitions["secrets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/steam": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.steam.id"];
          link?: parameters["rowFilter.steam.link"];
          image?: parameters["rowFilter.steam.image"];
          title?: parameters["rowFilter.steam.title"];
          price?: parameters["rowFilter.steam.price"];
          tags?: parameters["rowFilter.steam.tags"];
          platforms?: parameters["rowFilter.steam.platforms"];
          genre?: parameters["rowFilter.steam.genre"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["steam"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** steam */
          steam?: definitions["steam"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.steam.id"];
          link?: parameters["rowFilter.steam.link"];
          image?: parameters["rowFilter.steam.image"];
          title?: parameters["rowFilter.steam.title"];
          price?: parameters["rowFilter.steam.price"];
          tags?: parameters["rowFilter.steam.tags"];
          platforms?: parameters["rowFilter.steam.platforms"];
          genre?: parameters["rowFilter.steam.genre"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.steam.id"];
          link?: parameters["rowFilter.steam.link"];
          image?: parameters["rowFilter.steam.image"];
          title?: parameters["rowFilter.steam.title"];
          price?: parameters["rowFilter.steam.price"];
          tags?: parameters["rowFilter.steam.tags"];
          platforms?: parameters["rowFilter.steam.platforms"];
          genre?: parameters["rowFilter.steam.genre"];
        };
        body: {
          /** steam */
          steam?: definitions["steam"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/generate_secret": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  history: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    secret?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  imdb: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    image?: string;
    /** Format: text */
    link?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    year?: string;
    /** Format: text */
    certificate?: string;
    /** Format: integer */
    duration?: number;
    /** Format: ARRAY */
    genre?: unknown[];
    /** Format: double precision */
    rating?: number;
    /** Format: integer */
    metascore?: number;
    /** Format: text */
    description?: string;
    /** Format: integer */
    vote?: number;
  };
  secrets: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: uuid */
    user_id?: string;
    /**
     * Format: text
     * @default public.generate_secret()
     */
    secret?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  steam: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    link?: string;
    /** Format: text */
    image?: string;
    /** Format: text */
    title?: string;
    /** Format: double precision */
    price?: number;
    /** Format: ARRAY */
    tags?: unknown[];
    /** Format: ARRAY */
    platforms?: unknown[];
    /** Format: text */
    genre?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description history */
  "body.history": definitions["history"];
  /** Format: bigint */
  "rowFilter.history.id": string;
  /** Format: text */
  "rowFilter.history.secret": string;
  /** Format: timestamp with time zone */
  "rowFilter.history.created_at": string;
  /** @description imdb */
  "body.imdb": definitions["imdb"];
  /** Format: text */
  "rowFilter.imdb.id": string;
  /** Format: text */
  "rowFilter.imdb.image": string;
  /** Format: text */
  "rowFilter.imdb.link": string;
  /** Format: text */
  "rowFilter.imdb.title": string;
  /** Format: text */
  "rowFilter.imdb.year": string;
  /** Format: text */
  "rowFilter.imdb.certificate": string;
  /** Format: integer */
  "rowFilter.imdb.duration": string;
  /** Format: ARRAY */
  "rowFilter.imdb.genre": string;
  /** Format: double precision */
  "rowFilter.imdb.rating": string;
  /** Format: integer */
  "rowFilter.imdb.metascore": string;
  /** Format: text */
  "rowFilter.imdb.description": string;
  /** Format: integer */
  "rowFilter.imdb.vote": string;
  /** @description secrets */
  "body.secrets": definitions["secrets"];
  /** Format: bigint */
  "rowFilter.secrets.id": string;
  /** Format: uuid */
  "rowFilter.secrets.user_id": string;
  /** Format: text */
  "rowFilter.secrets.secret": string;
  /** Format: timestamp with time zone */
  "rowFilter.secrets.created_at": string;
  /** @description steam */
  "body.steam": definitions["steam"];
  /** Format: integer */
  "rowFilter.steam.id": string;
  /** Format: text */
  "rowFilter.steam.link": string;
  /** Format: text */
  "rowFilter.steam.image": string;
  /** Format: text */
  "rowFilter.steam.title": string;
  /** Format: double precision */
  "rowFilter.steam.price": string;
  /** Format: ARRAY */
  "rowFilter.steam.tags": string;
  /** Format: ARRAY */
  "rowFilter.steam.platforms": string;
  /** Format: text */
  "rowFilter.steam.genre": string;
}

export interface operations {}

export interface external {}
